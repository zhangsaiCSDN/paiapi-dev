<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.woniuxy.dao.PricehistoryMapper">
  <resultMap id="BaseResultMap" type="com.woniuxy.domain.Pricehistory">
    <id column="phid" jdbcType="INTEGER" property="phid" />
    <result column="gid" jdbcType="INTEGER" property="gid" />
    <result column="uid" jdbcType="INTEGER" property="uid" />
    <result column="phmoney" jdbcType="DOUBLE" property="phmoney" />
    <result column="phtime" jdbcType="TIMESTAMP" property="phtime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    phid, gid, uid, phmoney, phtime
  </sql>
  <select id="selectByExample" parameterType="com.woniuxy.domain.PricehistoryExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from pricehistory
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from pricehistory
    where phid = #{phid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from pricehistory
    where phid = #{phid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.woniuxy.domain.PricehistoryExample">
    delete from pricehistory
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.woniuxy.domain.Pricehistory">
    insert into pricehistory (phid, gid, uid, 
      phmoney, phtime)
    values (#{phid,jdbcType=INTEGER}, #{gid,jdbcType=INTEGER}, #{uid,jdbcType=INTEGER}, 
      #{phmoney,jdbcType=DOUBLE}, #{phtime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.woniuxy.domain.Pricehistory">
    insert into pricehistory
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="phid != null">
        phid,
      </if>
      <if test="gid != null">
        gid,
      </if>
      <if test="uid != null">
        uid,
      </if>
      <if test="phmoney != null">
        phmoney,
      </if>
      <if test="phtime != null">
        phtime,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="phid != null">
        #{phid,jdbcType=INTEGER},
      </if>
      <if test="gid != null">
        #{gid,jdbcType=INTEGER},
      </if>
      <if test="uid != null">
        #{uid,jdbcType=INTEGER},
      </if>
      <if test="phmoney != null">
        #{phmoney,jdbcType=DOUBLE},
      </if>
      <if test="phtime != null">
        #{phtime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.woniuxy.domain.PricehistoryExample" resultType="java.lang.Long">
    select count(*) from pricehistory
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update pricehistory
    <set>
      <if test="record.phid != null">
        phid = #{record.phid,jdbcType=INTEGER},
      </if>
      <if test="record.gid != null">
        gid = #{record.gid,jdbcType=INTEGER},
      </if>
      <if test="record.uid != null">
        uid = #{record.uid,jdbcType=INTEGER},
      </if>
      <if test="record.phmoney != null">
        phmoney = #{record.phmoney,jdbcType=DOUBLE},
      </if>
      <if test="record.phtime != null">
        phtime = #{record.phtime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update pricehistory
    set phid = #{record.phid,jdbcType=INTEGER},
      gid = #{record.gid,jdbcType=INTEGER},
      uid = #{record.uid,jdbcType=INTEGER},
      phmoney = #{record.phmoney,jdbcType=DOUBLE},
      phtime = #{record.phtime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.woniuxy.domain.Pricehistory">
    update pricehistory
    <set>
      <if test="gid != null">
        gid = #{gid,jdbcType=INTEGER},
      </if>
      <if test="uid != null">
        uid = #{uid,jdbcType=INTEGER},
      </if>
      <if test="phmoney != null">
        phmoney = #{phmoney,jdbcType=DOUBLE},
      </if>
      <if test="phtime != null">
        phtime = #{phtime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where phid = #{phid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.woniuxy.domain.Pricehistory">
    update pricehistory
    set gid = #{gid,jdbcType=INTEGER},
      uid = #{uid,jdbcType=INTEGER},
      phmoney = #{phmoney,jdbcType=DOUBLE},
      phtime = #{phtime,jdbcType=TIMESTAMP}
    where phid = #{phid,jdbcType=INTEGER}
  </update>
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  <resultMap id="sh" type="com.woniuxy.domain.Pricehistory">
    <id column="phid" jdbcType="INTEGER" property="phid" />
    <result column="phmoney" jdbcType="DOUBLE" property="phmoney" />
    <result column="phtime" jdbcType="TIMESTAMP" property="phtime" />
    <association property="user" javaType="User">
    	<id column="uid" jdbcType="INTEGER" property="uid" />
	     <result column="cid" jdbcType="INTEGER" property="cid" />
	     <result column="uname" jdbcType="VARCHAR" property="uname" />
	     <result column="upwd" jdbcType="VARCHAR" property="upwd" />
	     <result column="ustate" jdbcType="INTEGER" property="ustate" />
    </association>
    
    <association property="goods" javaType="Goods">
    	 <id column="gid" jdbcType="INTEGER" property="gid" />
	  	 <result column="gname" jdbcType="CHAR" property="gname" />
	   	 <result column="gprice" jdbcType="DOUBLE" property="gprice" /> 
	   	 <result column="gstart" jdbcType="TIMESTAMP" property="gstart" />
	   	 <result column="gend" jdbcType="TIMESTAMP" property="gend" />
	     <result column="gcount" jdbcType="INTEGER" property="gcount" />
	     <result column="ggap" jdbcType="DOUBLE" property="ggap" />
	     <result column="gpasstime" jdbcType="TIMESTAMP" property="gpasstime" />
	     <result column="gstate" jdbcType="INTEGER" property="gstate" />
	     <result column="garea" jdbcType="VARCHAR" property="garea" />
	     <result column="ginfo" jdbcType="VARCHAR" property="ginfo" />
	     <result column="salerid" jdbcType="INTEGER" property="salerid" />
	     <result column="gtid" jdbcType="INTEGER" property="gtid" />
    </association>
    
  </resultMap>
  
  
  
  <select id="find" parameterType="Pricehistory" resultMap="sh">
	  		SELECT * FROM pricehistory JOIN
		user ON  user.`uid` = pricehistory.`uid` 
		JOIN goods ON goods.`gid` = pricehistory.`gid`
	
		<where>
			<if test="user.uid != null">
				and user.uid = #{user.uid}
			</if>
			<if test="goods.gid != null">
				and goods.gid = #{goods.gid}
			</if>
			<if test="phid != null">
				and phid = #{phid}
			</if>
		</where>
  </select>
  
</mapper>