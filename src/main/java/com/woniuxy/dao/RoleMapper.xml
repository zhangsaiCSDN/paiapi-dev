<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.woniuxy.dao.RoleMapper">
	<resultMap id="BaseResultMap" type="com.woniuxy.domain.Role">
		<id column="rid" jdbcType="INTEGER" property="rid" />
		<result column="rname" jdbcType="CHAR" property="rname" />
		<result column="rdes" jdbcType="VARCHAR" property="rdes" />
	</resultMap>
	<sql id="Example_Where_Clause">
		<where>
			<foreach collection="oredCriteria" item="criteria"
				separator="or">
				<if test="criteria.valid">
					<trim prefix="(" prefixOverrides="and" suffix=")">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value} and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach close=")" collection="criterion.value"
										item="listItem" open="(" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Update_By_Example_Where_Clause">
		<where>
			<foreach collection="example.oredCriteria" item="criteria"
				separator="or">
				<if test="criteria.valid">
					<trim prefix="(" prefixOverrides="and" suffix=")">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value} and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach close=")" collection="criterion.value"
										item="listItem" open="(" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Base_Column_List">
		rid, rname, rdes
	</sql>
	<select id="selectByExample"
		parameterType="com.woniuxy.domain.RoleExample"
		resultMap="BaseResultMap">
		select
		<if test="distinct">
			distinct
		</if>
		<include refid="Base_Column_List" />
		from role
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
		<if test="orderByClause != null">
			order by ${orderByClause}
		</if>
	</select>
	<select id="selectByPrimaryKey"
		parameterType="java.lang.Integer" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from role
		where rid = #{rid,jdbcType=INTEGER}
	</select>
	<delete id="deleteByPrimaryKey"
		parameterType="java.lang.Integer">
		delete from role
		where rid = #{rid,jdbcType=INTEGER}
	</delete>
	<delete id="deleteByExample"
		parameterType="com.woniuxy.domain.RoleExample">
		delete from role
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</delete>
	<insert id="insert" parameterType="com.woniuxy.domain.Role">
		insert into role (rid, rname, rdes
		)
		values (#{rid,jdbcType=INTEGER}, #{rname,jdbcType=CHAR},
		#{rdes,jdbcType=VARCHAR}
		)
	</insert>
	<insert id="insertSelective"
		parameterType="com.woniuxy.domain.Role">
		insert into role
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="rid != null">
				rid,
			</if>
			<if test="rname != null">
				rname,
			</if>
			<if test="rdes != null">
				rdes,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="rid != null">
				#{rid,jdbcType=INTEGER},
			</if>
			<if test="rname != null">
				#{rname,jdbcType=CHAR},
			</if>
			<if test="rdes != null">
				#{rdes,jdbcType=VARCHAR},
			</if>
		</trim>
	</insert>
	<select id="countByExample"
		parameterType="com.woniuxy.domain.RoleExample"
		resultType="java.lang.Long">
		select count(*) from role
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</select>
	<update id="updateByExampleSelective" parameterType="map">
		update role
		<set>
			<if test="record.rid != null">
				rid = #{record.rid,jdbcType=INTEGER},
			</if>
			<if test="record.rname != null">
				rname = #{record.rname,jdbcType=CHAR},
			</if>
			<if test="record.rdes != null">
				rdes = #{record.rdes,jdbcType=VARCHAR},
			</if>
		</set>
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByExample" parameterType="map">
		update role
		set rid = #{record.rid,jdbcType=INTEGER},
		rname = #{record.rname,jdbcType=CHAR},
		rdes = #{record.rdes,jdbcType=VARCHAR}
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByPrimaryKeySelective"
		parameterType="com.woniuxy.domain.Role">
		update role
		<set>
			<if test="rname != null">
				rname = #{rname,jdbcType=CHAR},
			</if>
			<if test="rdes != null">
				rdes = #{rdes,jdbcType=VARCHAR},
			</if>
		</set>
		where rid = #{rid,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKey"
		parameterType="com.woniuxy.domain.Role">
		update role
		set rname = #{rname,jdbcType=CHAR},
		rdes = #{rdes,jdbcType=VARCHAR}
		where rid = #{rid,jdbcType=INTEGER}
	</update>
	<select id="findInfo" resultMap="findInfo">
		SELECT * FROM role r
		INNER JOIN
		role_permission pr
		ON
		pr.rid = r.rid
		INNER JOIN
		permission p
		ON
		pr.pmsid =
		p.pmsid
	</select>
	<resultMap type="Role" id="findInfo">
		<id property="rid" column="rid" />
		<result property="rname" column="rname" />
		<result property="rdesc" column="rdesc" />
		<collection property="permissions" ofType="Permission">
			<id property="pmsid" column="pmsid" />
			<result property="pmsname" column="pmsname" />
			<result property="pmsdesc" column="pmsdesc" />
		</collection>
	</resultMap>
</mapper>